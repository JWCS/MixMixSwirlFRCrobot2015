// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ArmDown.h"
#include "Commands/ArmDown1Tote.h"
#include "Commands/ArmToCanNormH.h"
#include "Commands/ArmToCanOn4_MaxH.h"
#include "Commands/ArmToNearistLevel.h"
#include "Commands/ArmToToteH.h"
#include "Commands/ArmToTote_StepH.h"
#include "Commands/ArmUp.h"
#include "Commands/ArmUp1Tote.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ClawToHorizontal.h"
#include "Commands/ClawToVertical.h"
#include "Commands/Drive.h"
#include "Commands/MoveClawDown.h"
#include "Commands/MoveClawUp.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	stick = new Joystick(0);
	
	downArm = new JoystickButton(stick, 13);
	downArm->WhileHeld(new ArmDown());
	upArm = new JoystickButton(stick, 12);
	upArm->WhileHeld(new ArmUp());
	armRoundH = new JoystickButton(stick, 11);
	armRoundH->WhenPressed(new ArmToNearistLevel());
	armToCan = new JoystickButton(stick, 10);
	armToCan->WhenPressed(new ArmToCanNormH());
	armDown1 = new JoystickButton(stick, 9);
	armDown1->WhenPressed(new ArmDown1Tote());
	armUp1 = new JoystickButton(stick, 8);
	armUp1->WhenPressed(new ArmUp1Tote());
	maxUsefulH = new JoystickButton(stick, 7);
	maxUsefulH->WhenPressed(new ArmToCanOn4_MaxH());
	totePlusStepLevel = new JoystickButton(stick, 6);
	totePlusStepLevel->WhenPressed(new ArmToTote_StepH());
	toteLevel = new JoystickButton(stick, 5);
	toteLevel->WhenPressed(new ArmToToteH());
	clawUp = new JoystickButton(stick, 4);
	clawUp->WhileHeld(new MoveClawUp());
	clawDown = new JoystickButton(stick, 3);
	clawDown->WhileHeld(new MoveClawDown());
	clawOut = new JoystickButton(stick, 2);
	clawOut->WhenPressed(new ClawToHorizontal());
	clawNeutral = new JoystickButton(stick, 1);
	clawNeutral->WhenPressed(new ClawToVertical());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("ClawToVertical", new ClawToVertical());

	SmartDashboard::PutData("ClawToHorizontal", new ClawToHorizontal());

	SmartDashboard::PutData("MoveClawDown", new MoveClawDown());

	SmartDashboard::PutData("MoveClawUp", new MoveClawUp());

	SmartDashboard::PutData("ArmToToteH", new ArmToToteH());

	SmartDashboard::PutData("ArmToTote_StepH", new ArmToTote_StepH());

	SmartDashboard::PutData("ArmToCanOn4_MaxH", new ArmToCanOn4_MaxH());

	SmartDashboard::PutData("ArmUp1Tote", new ArmUp1Tote());

	SmartDashboard::PutData("ArmDown1Tote", new ArmDown1Tote());

	SmartDashboard::PutData("ArmToCanNormH", new ArmToCanNormH());

	SmartDashboard::PutData("ArmToNearistLevel", new ArmToNearistLevel());

	SmartDashboard::PutData("ArmUp", new ArmUp());

	SmartDashboard::PutData("ArmDown", new ArmDown());

	SmartDashboard::PutData("Drive", new Drive());

	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getstick() {
	return stick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
