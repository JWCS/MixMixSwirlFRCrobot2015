// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ROBOTMAP_H
#define ROBOTMAP_H
#include "WPILib.h"
#include "AnalogRangeFinder.h"

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
class RobotMap {
public:
	// BEGIN AUTOGENERATED
	static Gyro* gyro;
	//static AnalogRangeFinder* sonic;
	static AnalogInput* gyroTemp;
	static SpeedController* driveFL;
	static SpeedController* driveFR;
	static SpeedController* driveBL;
	static SpeedController* driveBR;
	static RobotDrive* baseDrive;

	static SpeedController* lift;
	static Encoder* armEnc;
	static DigitalInput* toteH_MinDIO;
	static DigitalInput* canAnd4ToteH_MaxDIO;

	static SpeedController* bite;
	static DigitalInput* chargeState;
	static DigitalInput* paradeState;
	static DigitalInput* nulli;
    // END AUTOGENERATED

	static constexpr float joyXdeadBand=.15;
	static constexpr float joyYdeadBand= .15;
	static constexpr float driveTurnTargetZ=0.003;//Re-engage zone consts
	static constexpr float fastAngle=15.0, slowAngle=3.0;//drive rotation add angles
	static constexpr float fastAngleR=0.5, slowAngleR=.25;//drive rotation w/o gyro, 0-1 scale
	static constexpr float mecPidTolerance=0.2;
	static constexpr double drivePID_KP= 1/120, drivePID_KI= 0, drivePID_KD= 0;//drive pid consts
	static constexpr float joyAxisYscale=1, joyAxisXscale=1;//lets not be too hasty here...
	static constexpr float gyroSense=0.007;//tune for accuracy

	static constexpr double encDistance=1.0;//distance per 1 revolution
	static constexpr float scaleAngleDev=20/140, initAngle= 0; //arm claw plate angle
	static constexpr float armRate=.5;//from 0-1
	static constexpr int directionP=1, directionN=-1;//charge of direction
	static constexpr int armCountsTo_d1=20;//enc counts to change of 1 level or 1 foot, based off of level 1 to level 2
	static constexpr int armCountsTo_StepAndTote=27, armCountsTo_CanNorm=60, armCountsTo_Can4totes=140;

	static constexpr float biteRate=.2;//speed of jaw from 0-1
	static constexpr float analogRangefinder_DEFAULT_INCHES_PER_MV = 0.0403;
	static constexpr float analogRangefinder_DEFAULT_INCHES_PER_VOLT = 40.2969;

	static constexpr int driveFR_Port=0;//PWM
	static constexpr int driveBR_Port=1;
	static constexpr int driveFL_Port=2;
	static constexpr int driveBL_Port=3;
	static constexpr int lift_Port=4;
	static constexpr int bite_Port=5;
	static constexpr int armEnc_PortA=6;//labed encoder
	static constexpr int armEnc_PortB=7;//unlabled

	static constexpr int gyro_Port=0;//analog
	static constexpr int sonic_Port=1;
	static constexpr int gyroTemp_Port=2;

	static constexpr int chargeState_Port=0;//DID
	static constexpr int paradeState_Port=1;//ALL Limit Switches Normally Closed Wiring
	static constexpr int toteH_MinDIO_Port=2;
	static constexpr int canAnd4ToteH_MaxDIO_Port=3;

	//static constexpr int usbCamera_Port=1; I dont think theres a port

	//OI User Side
	static constexpr int resetGyro_Port=1;//For On Stick
	//static constexpr int gyroLess_Port= ;
	static constexpr int turnR_Fast_Port= 9;//For On Stick
	static constexpr int turnR_Slow_Port= 8;
	static constexpr int turnL_Slow_Port= 7;
	static constexpr int turnL_Fast_Port= 6;

	static constexpr int downArm_Port= 10;//For On Stick
	static constexpr int upArm_Port= 11;

	static constexpr int clawOut_Port= 5;//For On Stick
	static constexpr int clawUp_Port= 3;
	static constexpr int clawNeautral_Port= 4;
	static constexpr int clawDown_Port= 2;

	static constexpr int otherButton_Ports=13;//For On Stick

	static void init();
};
#endif
