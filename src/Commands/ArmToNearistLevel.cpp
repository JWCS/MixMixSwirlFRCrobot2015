// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ArmToNearistLevel.h"

ArmToNearistLevel::ArmToNearistLevel() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED
	Requires(Robot::arm);

    // END AUTOGENERATED
}

// Called just before this Command runs the first time
void ArmToNearistLevel::Initialize() {
	
}

// Called repeatedly when this Command is scheduled to run
void ArmToNearistLevel::Execute() {
	count=Robot::arm->armEnc->Get();
	target= Robot::arm->ArmRoundH();
	if(target>=count){
		direction=RobotMap::directionP;
	}else{
		direction=RobotMap::directionN;
	}
	Robot::arm->ArmBaseMove(direction);
}

// Make this return true when this Command no longer needs to run execute()
bool ArmToNearistLevel::IsFinished() {
	bool isFin=false;
	if(count==target
					||Robot::arm->canAnd4ToteH_MaxDIO||Robot::arm->toteH_MinDIO)
			isFin= true;

	if(direction==RobotMap::directionN&&(Robot::arm->armEnc->Get()<=target))
		return isFin=true;

	if(direction==RobotMap::directionP&&(Robot::arm->armEnc->Get()>=target))
		isFin=true;

	return isFin;
}

// Called once after isFinished returns true
void ArmToNearistLevel::End() {
	Robot::arm->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ArmToNearistLevel::Interrupted() {
	Robot::arm->Stop();
}
