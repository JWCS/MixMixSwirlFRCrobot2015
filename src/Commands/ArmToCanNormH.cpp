// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ArmToCanNormH.h"

ArmToCanNormH::ArmToCanNormH() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::arm);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void ArmToCanNormH::Initialize() {
	
}

// Called repeatedly when this Command is scheduled to run
void ArmToCanNormH::Execute() {
	if(Robot::arm->armEnc->Get()==RobotMap::armCountsTo_CanNorm)
			ArmToCanNormH::IsFinished();
		if(Robot::arm->armEnc->Get()<RobotMap::armCountsTo_CanNorm){
			Robot::arm->ArmBaseMove(RobotMap::directionP);
			check=true;
		}
		if(Robot::arm->armEnc->Get()>RobotMap::armCountsTo_CanNorm){
				Robot::arm->ArmBaseMove(RobotMap::directionN);
				check=false;
			}

}

// Make this return true when this Command no longer needs to run execute()
bool ArmToCanNormH::IsFinished() {
	bool isFin=false;
		if(check)
			Robot::arm->armEnc->Get()>=RobotMap::armCountsTo_CanNorm ? isFin=true : isFin=false;
		if(!check)
				Robot::arm->armEnc->Get()<=RobotMap::armCountsTo_CanNorm ? isFin=true : isFin=false;
		return isFin;
}

// Called once after isFinished returns true
void ArmToCanNormH::End() {
	Robot::arm->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ArmToCanNormH::Interrupted() {
	Robot::arm->Stop();
}
